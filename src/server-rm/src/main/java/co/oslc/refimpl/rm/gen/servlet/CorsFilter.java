// Start of user code Copyright
/*
 * Copyright (c) 2025 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Distribution License 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: BSD-3-Simple
 *
 * This file is generated by Lyo Designer (https://www.eclipse.org/lyo/)
 */
// End of user code

package co.oslc.refimpl.rm.gen.servlet;

// spotless:off
import java.io.IOException;

import jakarta.inject.Inject;
import jakarta.ws.rs.container.ContainerRequestContext;
import jakarta.ws.rs.container.ContainerResponseContext;
import jakarta.ws.rs.container.ContainerResponseFilter;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
// Start of user code imports
// End of user code
// spotless:on

// Start of user code pre_class_code
// End of user code

public class CorsFilter implements ContainerResponseFilter {
    private final static Logger log = LoggerFactory.getLogger(CorsFilter.class);

    // Start of user code class_attributes
    // End of user code

    @Inject
    private LyoAppConfiguration config;

    // Start of user code class_methods
    // End of user code

    @Override
    public void filter(ContainerRequestContext requestContext,
                       ContainerResponseContext responseContext) throws IOException {
        if (config.corsFriends().isEmpty()) {
            return;
        }
        
        String originAllow = "*";
        final String requestOrigin = requestContext.getHeaderString("Origin");
        if (requestOrigin != null && !requestOrigin.isBlank()) {
            if (!config.corsFriends().contains("*") && !config.corsFriends().contains(requestOrigin) ) {
                return;
            }
            originAllow = requestOrigin;
        } else {
            if (!config.corsFriends().contains("*")) {
                return;
            }
        }
        responseContext.getHeaders().add(
            "Access-Control-Allow-Origin", originAllow);
        responseContext.getHeaders().add(
            "Access-Control-Allow-Credentials", "true");
        responseContext.getHeaders().add(
            "Access-Control-Allow-Headers",
            "origin, content-type, accept, authorization, oslc-core-version, Configuration-Context, OSLC-Configuration-Context");
        responseContext.getHeaders().add(
            "Access-Control-Allow-Methods",
            "GET, POST, PUT, DELETE, OPTIONS, HEAD");
    }
}
